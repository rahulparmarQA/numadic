<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-08T16:41:57 IST" name="Suite" finished-at="2024-03-08T16:42:08 IST" duration-ms="11262">
    <groups>
    </groups>
    <test started-at="2024-03-08T16:41:57 IST" name="RunTest" finished-at="2024-03-08T16:42:08 IST" duration-ms="11262">
      <class name="numadic.test.Test_01">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:41:57 IST" name="setup" finished-at="2024-03-08T16:42:02 IST" duration-ms="4545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyHeader(java.util.HashMap)[pri:1, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:02 IST" name="verifyHeader" data-provider="verifyHeader" finished-at="2024-03-08T16:42:02 IST" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{text=JOIN OUR CREW}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeader -->
        <test-method signature="filterQA(java.util.HashMap)[pri:2, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:02 IST" name="filterQA" data-provider="filterQA" finished-at="2024-03-08T16:42:04 IST" duration-ms="1946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{filterby=Engineering, job=QA Engineer}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterQA -->
        <test-method signature="verifyPageTitle(java.util.HashMap)[pri:3, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:04 IST" name="verifyPageTitle" data-provider="verifyPageTitle" finished-at="2024-03-08T16:42:04 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{title=Numadic Iot Pvt. Ltd. - QA Engineer in}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method signature="clickInterested(java.util.HashMap)[pri:4, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:04 IST" name="clickInterested" data-provider="clickInterested" finished-at="2024-03-08T16:42:04 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{text=Job application}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickInterested -->
        <test-method signature="verifyValidation(java.util.HashMap)[pri:5, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:04 IST" name="verifyValidation" data-provider="verifyValidation" finished-at="2024-03-08T16:42:07 IST" duration-ms="2806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=First Name cannot be empty., lastname=Last Name cannot be empty., email=Email cannot be empty., mobile=Mobile cannot be empty., employer=Current Employer cannot be empty., job=Current Job Title cannot be empty., currentctc=Current CTC cannot be empty., expectedctc=Expected CTC cannot be empty., noticeperiod=Notice Period (days) cannot be empty., reason=Reason for change from current organization? cannot be empty., resume=Resume cannot be empty.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyValidation -->
        <test-method signature="applcationFill(java.util.HashMap)[pri:6, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:07 IST" name="applcationFill" data-provider="applcationFill" finished-at="2024-03-08T16:42:07 IST" duration-ms="655" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{firstname=rahul, lastname=parmar, email=rahulparmar@email.com, mobile=9345111721, employer=techdome, job=quality analyst, currentctc=4, expectedctc=6, noticeperiod=60, reason=better opportunity, resume=blank}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Long cannot be cast to class java.lang.String (java.lang.Long and java.lang.String are in module java.base of loader 'bootstrap')
at numadic.test.Test_01.applcationFill(Test_01.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applcationFill -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:numadic.test.Test_01@59474f18]" started-at="2024-03-08T16:42:08 IST" name="tearDown" finished-at="2024-03-08T16:42:08 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- numadic.test.Test_01 -->
    </test> <!-- RunTest -->
  </suite> <!-- Suite -->
</testng-results>
